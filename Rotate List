/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null)
            return null;
        else if(head.next==null)
            return head;
        int count=0;
        ListNode next;
        ListNode prev=head;
        ListNode curr=head;
        
        while(curr!=null){
            count++;
            curr=curr.next;
        }
        curr=head;
        if(count<=k)
            k=k%count;
        if(k==0)
            return head;
        
        for(int i=0;i<k;i++){
            curr=curr.next;
        }
        while(curr.next!=null){
            prev=prev.next;
            curr=curr.next;
        }
        next=prev.next;
        prev.next=null;
        curr.next=head;
        
    return next;
    }
}
